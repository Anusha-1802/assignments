Assignment 9-

1. Write a program which takes the month number as an input and display
number of days in that month.
sol-
#include<stdio.h>
int main()
{
    int n;
    printf("enter any number of month:\n");
    scanf("%d",&n);
    switch(n)
    {
        case 1:
         printf("JANUARY 31days");
        break;
        case 2:
         printf("FEBRUARY 28 days");
        break;
        case 3:
         printf("MARCH 31 days");
        break;
        case 4:
         printf("APRIL 30 days");
        break;
        case 5:
         printf("MAY 31 days");
        break;
        case 6:
         printf("JUNE 30 days");
        break;
        case 7:
         printf("JULY 31 days");
        break;
        case 8:
         printf("AUGUST 31 days");
        break;
        case 9:
         printf("SEPTEMBER 30 days");
        break;
        case 10:
         printf("OCTOBER 31 days");
        break;
        case 11:
         printf("NOVEMBER 30 days");
        break;
        case 12:
         printf("DECEMBER 31 days");
        break;
        default:
        printf("enter correct choice\n");
    }
    return 0;

}

2. Write a menu driven program with the following options:
a. Addition
b. Subtraction
c. Multiplication
d. Division
e. Exit
sol-
#include<stdio.h>
int main()
{
    int n;
    printf("enter any number of month:\n");
    scanf("%d",&n);
    switch(n)
    {
        case 1:
         printf("JANUARY 31days");
        break;
        case 2:
         printf("FEBRUARY 28 days");
        break;
        case 3:
         printf("MARCH 31 days");
        break;
        case 4:
         printf("APRIL 30 days");
        break;
        case 5:
         printf("MAY 31 days");
        break;
        case 6:
         printf("JUNE 30 days");
        break;
        case 7:
         printf("JULY 31 days");
        break;
        case 8:
         printf("AUGUST 31 days");
        break;
        case 9:
         printf("SEPTEMBER 30 days");
        break;
        case 10:
         printf("OCTOBER 31 days");
        break;
        case 11:
         printf("NOVEMBER 30 days");
        break;
        case 12:
         printf("DECEMBER 31 days");
        break;
        default:
        printf("enter correct choice\n");
    }
    return 0;

}

3. Write a program which takes the day number of a week and displays a
unique greeting message for the day.
sol-
#include<stdio.h>
#include<stdlib.h>
int main()
{
    int n;
    printf("enter any number:\n");
    scanf("%d",&n);
    switch(n)
    {
        case 1:
        printf("\"A SMILE IS THE BEST MAKEUP YOU CAN WEAR\"\n HAPPY MONDAY!! ");
        break;
        case 2:
        printf("\"MAY THE GOD ALWAYS WITH YOU GUIDING YOUR WAY\"\n HAPPY TUESDAY!!");
        break;
        case 3:
        printf("\"REMEMBER THAT  YOU CAN SHINE NO MATTER WHAT YOU'RE MAD OFF\"\n HAPPY WENESDAY!!");
        break;
        case 4:
        printf("\"HOPE YOUR DAY IS JUST AS WONDERFUL AS YOUR ERA\"\n HAPPY THURSDAY!!");
        break;
        case 5:
        printf("\"MAY THE DAY AHEAD HOLD BEAUTIFUL THINGS FOR YOU\"\n HAPPY FRIDAY!!");
        break;
        case 6:
        printf("\"EMBRACE IT!! GOD WILL DO AMAZING THING || happy weekends\"\n HAPPY SATURDAY");
        break;
        case 7:
        printf("\"THE MORE YOU BLESS THE MORE BLESSED YOU WILL BECOME\"\n HAPPY SUNDAY");
        break;
        default:
        printf("enter correct choice!!");
    }
    return 0;
}

4. Write a menu driven program with the following options:
a. Check whether a given set of three numbers are lengths of an
isosceles triangle or not
b. Check whether a given set of three numbers are lengths of sides of
a right angled triangle or not
c. Check whether a given set of three numbers are equilateral triangle
or not
d. Exit
sol-
#include<stdio.h>
#include<stdlib.h>
int main()
{
    int a,b,c,n;
    while(1)
    {
        printf("1. To check given length of triangle is an isosceles triangle:\n");
        printf("2. To check given length of triangle is a right angled triangle:\n");
        printf("3. To check given length of a triangle is an equilateral triangle:\n");
        printf("4. Exit\n");
        printf("enter your choice\n");
        scanf("%d",&n);
        switch(n)
        {
            case 1:
            printf("enter any three length of triangle:");
            scanf("%d%d%d",&a,&b,&c);
            if(a==b||b==c||c==a)
            {
                printf("\ngiven sides are of an isosceles triangle\n");
            }
            else
            {
                printf("\nnot an isosceles triangle");
            }
            break;
            case 2:
            printf("enter any three length of triangle:");
            scanf("%d%d%d",&a,&b,&c);
            if(a*a==b*b+c*c||b*b==a*a+c*c||c*c==a*a+b*b)
            {
                printf("\ngievn sides are of a right angle triangle\n");
            }
            else
            {
                printf("not a right angled triangled\n");
            }
            break;
            case 3:
            printf("enter any three length of triangle:");
            scanf("%d%d%d",&a,&b,&c);
            if(a==b)
            {
                if(a==c)
                {
                    printf("\ngiven length is a equilateral triangle\n");
                }
            }
            else 
            {
                printf("\n not an equilateral triangle\n");
            }
            break;
            case 4:
             exit(0);
            default:
            printf("enter correct choice\n");
        }
    }
    return 0;
}

5. Convert the following if-else-if construct into switch case:
if(var == 1)
System.out.println("good");
else if(var == 2)
System.out.println("better");
else if(var == 3)
System.out.println("best");
else
System.out.println("invalid");
sol-
#include<stdio.h>
int main()
{
    int var;
    printf("enter any number");
    scanf("%d",&var);
    switch(var)
    {
        case 1:
        printf("good\n");
        break;
        case 2:
        printf("better\n");
        break;
        case 3:
        printf("best\n");
        break;
        case 4:
        printf("invalid\n");
        default:
        printf("enter correct choice\n");
    }
    return 0;
}

6. Program to check whether a year is a leap year or not. Using switch
statement
sol-
#include<stdio.h>
int main()
{
    int n,a;
    printf("enter any year:\n");
    scanf("%d",&n);
    a=(n%4==0||n%400==0);
    switch(a)
    {
        case 1:
        printf("leap year\n");
      break;
      case 0:
      printf("not a leap year\n");
      break;
      default:
      printf("invalid\n");
    }
    return 0;
}

7. Program to take the value from the user as input electricity unit charges
and calculate total electricity bill according to the given condition . Using
the switch statement.
For the first 50 units Rs. 0.50/unit
For the next 100 units Rs. 0.75/unit
For the next 100 units Rs. 1.20/unit
For units above 250 Rs. 1.50/unit
An additional surcharge of 20% is added to the bill.
sol-
#include<stdio.h>
int main()
{
    float x,amount=0,total=0;
    printf("enter any number as charges:\n");
    scanf("%f",&x);
    switch(x<=50)
    {
        case 1:
        amount=x*0.50;
        break;
        case 0: switch(x<=150)
        {
            case 1:
            amount=25+(x-50)*0.75;
            break;
            case 0: switch(x<=250)
            {
                case 1:
                amount =100+(x-150)*1.20;
                break;
                case 0:
                amount=220+(x-250)*1.50;
                break;
            }
            break;
        }
        break;
    }
    total=amount+amount*0.20;
    printf("total amount =%f",total);
    return 0;
}

8. Program to convert a positive number into a negative number and negative
number into a positive number using a switch statement.
sol-
#include<stdio.h>
int main()
{
    int r,a,b;
    printf("enter any number:\n");
    scanf("%d",&a);
    r=(a>0&&a<0);
    switch(r)
    {
        case 1:
        printf("positive to negative");
        b=-a;
        printf("%d is now %d",a,b);
        break;
        case 0:
        printf("negative to positive ");
        b=-a;
        printf("%d is now %d",a,b);
        break;
        default:
        printf("invalid");
    }
}

9. Program to Convert even number into its upper nearest odd number
Switch Statement.
sol-
#include<stdio.h>
int main()
{
    int n,r,b;
    printf("enter any number\n");
    scanf("%d",&n);
    r=(n%2==0||n%2!=0);
    switch(r)
    {
        case 1:
        b=n+1;
        printf("%d upper nearest odd number is %d",n,b);
        break;
        default:
        printf("invalid");
    }
    return 0;
}

10. C program to find all roots of a quadratic equation using switch case
sol-
#include <stdio.h>
#include <math.h> 

int main()
{
    float a, b, c,d;
    float root1, root2, imaginary;

    printf("Enter values of a, b, c of quadratic equation:\n ");
    scanf("%f%f%f", &a, &b, &c);

    d = (b * b) - (4 * a * c);

    switch(d > 0)
    {
        case 1:
            root1 = (-b + sqrt(d)) / (2 * a);
            root2 = (-b - sqrt(d)) / (2 * a);

            printf("Two distinct and real roots exists: %.2f and %.2f", 
                    root1, root2);
            break;

        case 0:
          
            switch(d < 0)
            {
                case 1:
                   
                    root1 = root2 = -b / (2 * a);
                    imaginary = sqrt(-d) / (2 * a);

                    printf("Two distinct complex roots exists: %.2f + i%.2f and %.2f - i%.2f", 
                            root1, imaginary, root2, imaginary);
                    break;

                case 0:
                   
                    root1 = root2 = -b / (2 * a);
                    printf("Two equal and real roots exists: %.2f and %.2f", root1, root2);
                    break;
            }
    }

    return 0;
}
