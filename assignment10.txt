Assignment 10-

1. Write a function to calculate the area of a circle. (TSRS)
sol-
#include<stdio.h>
float area(float);
int main()
{
    int a;
    printf("enter radius of circle:\n");
    scanf("%d",&a);
    printf("area od circle is =%f",area(a));
    return 0;
}
float area (float x)
{
    float r;
    r=3.14*x*x;
    return r;
}

2. Write a function to calculate simple interest. (TSRS)
sol-
#include<stdio.h>
float si(float ,float ,float);
int main()
{
    float p,r,t;
    printf("enter principle amount , rate, time:\n");
    scanf("%f%f%f",&p,&r,&t);
    printf("simple interest is =%.3f",si(p,r,t));
    return 0;
}
float si(float a ,float b ,float c)
{
    float s;
    s=(a*b*c)/100;
    return s;
}

3. Write a function to check whether a given number is even or odd. Return 1 if the 
number is even, otherwise return 0. (TSRS)
sol-
#include<stdio.h>
int even(int);
int main()
{
    int x;
    printf("enter any number:\n");
    scanf("%d",&x);
    printf("it is even",even(x));
}
int even(int a)
{
    if(a%2==0)
    return 1;
    else 
    return 0;
}

4. Write a function to print first N natural numbers (TSRN)
sol-
#include<stdio.h>
void nat(int);
int main()
{
    int n;
    printf("enter any number:\n");
    scanf("%d",&n);
    nat(n);
    return 0;
}
void nat(int a)
{
    int i;
    for(i=1;i<=a;i++)
    {
        printf("%d ",i);
    }
}

5. Write a function to print first N odd natural numbers. (TSRN)
sol-
#include<stdio.h>
void odd(int);
int main()
{
    int n;
    printf("enter any number:\n");
    scanf("%d",&n);
    odd(n);
    return 0;
}
void odd(int a)
{
    int i;
    while(i<a-1)
    {
        for(i=0;i<a;i++)
        
        {
            i=i+1;
            printf("%d ",i);
        }
    }
}

6. Write a function to calculate the factorial of a number. (TSRS)
sol-
#include<stdio.h>
int fact(int);
int main()
{
    int n;
    printf("enter any number to calculate factorial:\n");
    scanf("%d",&n);
    printf("factorial is %d",fact(n));
    return 0;
}
int fact(int a)
{
    int f=1,i;
    for(i=1;i<=a;i++)
    {
        f=f*i;
    }
    return f;
}

7. Write a function to calculate the number of combinations one can make from n items 
and r selected at a time. (TSRS)
sol-
#include<stdio.h>
int com(int ,int );
int fact(int);
int main()
{
    int x,y;
    printf("enter any two number:\n");
    scanf("%d%d",&x,&y);
    if(x>y)
    {
        printf("%d ",com(x,y));
    }
    else
    {
        printf("NOT POSSIBLE !");
    }
    return 0;
}
int com(int n,int r)
{
    int c=fact(n)/(fact(n-r)*fact(r));
    return c;
}
int fact(int a)
{
    int f=1,i;
    for(i=1;i<=a;i++)
    {
        f=f*i;
    }
    return f;
}

8. Write a function to calculate the number of arrangements one can make from n items 
and r selected at a time. (TSRS)
sol-
#include<stdio.h>
int arr(int ,int );
int fact(int);
int main()
{
    int x,y;
    printf("enter any two number:\n");
    scanf("%d%d",&x,&y);
    if(x>y)
    {
        printf("%d ",arr(x,y));
    }
    else
    {
        printf("NOT POSSIBLE !");
    }
    return 0;
}
int arr(int n,int r)
{
    int c=fact(n)/fact(r);
    return c;
}
int fact(int a)
{
    int f=1,i;
    for(i=1;i<=a;i++)
    {
        f=f*i;
    }
    return f;
}

9. Write a function to check whether a given number contains a given digit or not. 
(TSRS)
sol-
#include<stdio.h>
int dig(int n,int d)
{
    int rem;
    while(n)
    {
        rem=n%10;
        if(rem==d)
        return 1;
        n=n/10;
    }
    return 0;
}
int main()
{
    int nu,di;
    printf("enter any number or a digit:\n");
    scanf("%d%d",&nu,&di);
    dig(nu,di);
    printf("%d is present",di);
    return 0;
}

10. Write a function to print all prime factors of a given number. For example, if the 
number is 36 then your result should be 2, 2, 3, 3. (TSRN)
sol-
#include<stdio.h>
void primefact(int n)
{
    int i;
    for(i=2;n!=1;i++)
    {
        while(n%i==0)
        {
            n=n/i;
            printf("%d ",i);
        }
    }
    printf("\nprime factors");
}
int main()
{
    int a;
    printf("enter any number:\n");
    scanf("%d",&a);
    primefact(a);
    return 0;
}